{"version":3,"sources":["App.js","reportWebVitals.js","index.js","Messages.module.css","App.module.css"],"names":["ThemeContext","createContext","theme","setTheme","Button","value","useContext","onClick","disabled","toUpperCase","Buttons","Messages","className","messagesStyles","message","App","useState","appStyles","light","dark","Provider","style","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6PAIMA,EAAeC,wBAAc,CACjCC,MAAO,eACPC,SAAU,eAKNC,EAAS,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EAFEC,qBAAWN,GAG/BE,EADkB,EAClBA,MAAOC,EADW,EACXA,SAEf,OACE,wBACEI,QAAS,kBAAMJ,EAASE,IACxBG,SAAUN,IAAUG,EAFtB,SAIGA,EAAMI,iBAKPC,EAAU,WACd,OACE,qCACE,cAAC,EAAD,CAAQL,MAAO,UACf,cAAC,EAAD,CAAQA,MAAO,SACf,cAAC,EAAD,CAAQA,MAAO,gBAKfM,EAAW,WACf,OACE,qCACE,mBAAGC,UAAWC,IAAeC,QAA7B,2BAGA,mBAAGF,UAAWC,IAAeC,QAA7B,4BAGA,mBAAGF,UAAWC,IAAeC,QAA7B,+BAgCSC,EAzBH,WAAO,IAAD,EACUC,mBAAS,WADnB,mBACTd,EADS,KACFC,EADE,KAEVS,EAAsB,YAAVV,EAAqB,GACzB,UAAVA,EAAmBe,IAAUC,MAAQD,IAAUE,KACnD,OACE,cAACnB,EAAaoB,SAAd,CACEf,MAAO,CACLH,QACAC,YAHJ,SAME,sBACES,UAAWA,EACXS,MAAO,CAACC,WAAY,QAFtB,UAIE,gDACkBpB,KAElB,cAAC,EAAD,IACA,cAAC,EAAD,UCzDOqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,QAAU,4B,kBCA5BD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,KAAO,qB","file":"static/js/main.5e95e4bd.chunk.js","sourcesContent":["import React, {createContext, useContext, useState} from 'react';\nimport appStyles from './App.module.css';\nimport messagesStyles from './Messages.module.css';\n\nconst ThemeContext = createContext({\n  theme: 'No theme set',\n  setTheme: () => {},\n});\n\nconst useThemeContext = () => useContext(ThemeContext);\n\nconst Button = ({value}) => {\n  const { theme, setTheme } = useThemeContext()\n\n  return (\n    <button\n      onClick={() => setTheme(value)}\n      disabled={theme === value}\n    >\n      {value.toUpperCase()}\n    </button>\n  )\n}\n\nconst Buttons = () => {\n  return (\n    <>\n      <Button value={'light'} />\n      <Button value={'dark'} />\n      <Button value={'default'} />\n    </>\n  )\n}\n\nconst Messages = () => {\n  return (\n    <>\n      <p className={messagesStyles.message}>\n        Message first\n      </p>\n      <p className={messagesStyles.message}>\n        Message second\n      </p>\n      <p className={messagesStyles.message}>\n        Message third\n      </p>\n    </>\n  )\n};\n\nconst App = () => {\n  const [theme, setTheme] = useState('default');\n  const className = theme === 'default'? ''\n    : theme === 'light'? appStyles.light : appStyles.dark;\n  return (\n    <ThemeContext.Provider\n      value={{\n        theme,\n        setTheme,\n      }}\n    >\n      <div\n        className={className}\n        style={{marginLeft: '20px'}}\n      >\n        <p>\n          Current theme: {theme}\n        </p>\n        <Buttons />\n        <Messages />\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Messages_message__2SC7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"light\":\"App_light__3wMQK\",\"dark\":\"App_dark__2HPcZ\"};"],"sourceRoot":""}